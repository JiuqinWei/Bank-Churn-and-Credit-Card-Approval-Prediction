applicant = read.csv("/Users/jacobwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
applicant = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
credit = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/credit_record.csv") # Applicants Accounts Data
View(credit)
View(credit)
View(applicant)
# Merge two dataset by ID
merge = result <- merge(applicant, credit, by = "ID", all.x = TRUE)
ls(result)
applicant = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
credit = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/credit_record.csv") # Applicants Accounts Data
# Merge two dataset by ID
merge = result <- merge(applicant, credit, by = "ID", all.x = TRUE)
View(merge)
# Merge two dataset by ID
result = merge(applicant, credit, by = "ID", all.x = TRUE)
applicant = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
credit = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/credit_record.csv") # Applicants Accounts Data
# Merge two dataset by ID
result = merge(applicant, credit, by = "ID", all.x = TRUE)
View(result)
applicant = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
credit = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/credit_record.csv") # Applicants Accounts Data
# Merge two dataset by ID
result = merge(applicant, credit, by = "ID", all.x = FALSE)
View(result)
# Install necessary packages
install.packages("dplyr")
# Load necessary packages
library(dplyr)
# Read two data frames
applicant = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/application_record.csv") # Applicants Demographic Data
library(ggplot2)
library(dplyr)
library(corrplot)
data = read.csv("/Users/jiuqinwei/Documents/GitHub/STAT675-Final-Project/Bank Customer Churn Prediction.csv")
# data <- read.csv("/Users/edmund1/Desktop/Bank\ Customer\ Churn\ Prediction\ copy.csv") #change the path
str(data)
summary(data)
# Check for missing values
sum(is.na(data))
# Remove duplicate rows, if any
data <- data %>% distinct()
# Histograms for numerical variables
hist(data$age, main = "Age Distribution", xlab = "Age", col = "skyblue")
hist(data$credit_score, main = "Credit Score Distribution", xlab = "Credit Score", col = "lightgreen")
hist(data$balance, main = "Balance Distribution", xlab = "Balance", col = "salmon")
# Bar plots for categorical variables
ggplot(data, aes(x = gender)) + geom_bar(fill = "turquoise") + labs(title = "Gender Distribution")
ggplot(data, aes(x = as.factor(products_number))) + geom_bar(fill = "gold") + labs(title = "Products Number Distribution")
# Boxplots showing the distribution of balance and age by churn
ggplot(data, aes(x = as.factor(churn), y = age, fill = as.factor(churn))) +
geom_boxplot() + labs(title = "Age Distribution by Churn", x = "Churn", y = "Age")
ggplot(data, aes(x = as.factor(churn), y = balance, fill = as.factor(churn))) +
geom_boxplot() + labs(title = "Balance Distribution by Churn", x = "Churn", y = "Balance")
# Correlation Plot
numerical_data <- data[, c("credit_score", "age", "tenure", "balance", "estimated_salary")]
correlations <- cor(numerical_data)
corrplot(correlations, method = "circle", type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, addCoef.col = "black")
# Analyzing churn by country
ggplot(data, aes(x = country, fill = as.factor(churn))) +
geom_bar(position = "fill") + labs(y = "Proportion", title = "Churn by Country")
# Analyzing churn by active member status
ggplot(data, aes(x = as.factor(active_member), fill = as.factor(churn))) +
geom_bar(position = "fill") + labs(y = "Proportion", title = "Churn by Active Membership")
ggsave("age_distribution.png")
ggsave("credit_score_distribution.png")
ggsave("balance_distribution.png")
